function formOnLoad(executionContext) {
	setTabFocus(executionContext);
	addOnChange(executionContext);
	pinBPF(executionContext);

    //setproduct area when KYC is created from account
    //setProductAreaForAccountKYC(executionContext);

executionContext.getFormContext().getControl("ukn_individualcompletingkycchecks").addPreSearch(populateIndividualCompletingKycChecks);
executionContext.getFormContext().getControl("header_process_ukn_individualcompletingkycchecks").addPreSearch(populateIndividualCompletingKycChecks);
}

//Registers functions that should run on change of fields
function addOnChange(executionContext) {
	var formContext = executionContext.getFormContext();
	formContext.getAttribute("statuscode").addOnChange(setTabFocus);
	formContext.data.process.addOnStageChange(setTabFocus);
}
	
//Pins the BPF to the right hand side of the screen
function pinBPF(executionContext) {
	var formContext = executionContext.getFormContext();
	formContext.ui.process.setDisplayState("expanded");
}

//Sets the tab focus depending on the Approval Status	
function setTabFocus(executionContext) {
    var formContext = executionContext.getFormContext();
	var recordStatus = formContext.getAttribute("statuscode");
    if (recordStatus != null) {
        recordStatusName = recordStatus.getText();
		if (recordStatusName == "Initial") {
		var tabObj = formContext.ui.tabs.get("initial");
		tabObj.setFocus();
        }
		else if (recordStatusName == "Submission") {
		var tabObj = formContext.ui.tabs.get("submission");
		tabObj.setFocus();
        }
		else if (recordStatusName == "Investigation") {
		var tabObj = formContext.ui.tabs.get("investigation");
		tabObj.setFocus();
        }
		else if (recordStatusName == "Risk") {
		var tabObj = formContext.ui.tabs.get("risk");
		tabObj.setFocus();
        }
		else if (recordStatusName == "Pre Completion") {
		var tabObj = formContext.ui.tabs.get("pre_completion");
		tabObj.setFocus();
        }
		else if (recordStatusName == "4 Eyes Check") {
		var tabObj = formContext.ui.tabs.get("4_eyes_check");
		tabObj.setFocus();
        }
		else if (recordStatusName == "Outcome") {
		var tabObj = formContext.ui.tabs.get("outcome");
		tabObj.setFocus();
        }
		else {
		var tabObj = formContext.ui.tabs.get("outcome");
		tabObj.setFocus();
        }
    }
}

function populateIndividualCompletingKycChecks(executionContext) 
{
    var d365BaseUrl = Xrm.Utility.getGlobalContext().getClientUrl();

	var fetchData = {
		"fieldsecurityprofileid": "578C1F60-EBF9-EA11-A815-0022480076D0"
	  };

    var userListFilter = getDirectAssignedUsersfromFSP(fetchData, d365BaseUrl);
    var teamUserListFilter = getAssignedTeamUsersfromFSP(fetchData, d365BaseUrl);

    if(userListFilter || teamUserListFilter)
    {
        userListFilterCondition = "";
        
        if(userListFilter)
        {
            userListFilterCondition += userListFilterCondition + userListFilter;
        }

        if(teamUserListFilter)
        {
            userListFilterCondition += userListFilterCondition + teamUserListFilter;
        }

        if(userListFilterCondition)
        {
            var userListFilterConditionQuery = "<filter type='or'>" + userListFilterCondition + "</filter>";
            executionContext.getFormContext().getControl("ukn_individualcompletingkycchecks").addCustomFilter(userListFilterConditionQuery, "systemuser");
            executionContext.getFormContext().getControl("header_process_ukn_individualcompletingkycchecks").addCustomFilter(userListFilterConditionQuery, "systemuser");
        }
    }  
}

function getDirectAssignedUsersfromFSP(fetchData, d365BaseUrl)
{
	var userListCondition = "";
    var result = "";

	var fetchXml = "<fetch mapping='logical'>";
	fetchXml += "<entity name='systemuser'>";
	fetchXml += "<attribute name='systemuserid'/>";
	fetchXml += "<link-entity name='systemuserprofiles' from='systemuserid' to='systemuserid'>";
	fetchXml += "<filter>";
    //FSP ID for KYC Processor 578C1F60-EBF9-EA11-A815-0022480076D0
	fetchXml += "<condition attribute='fieldsecurityprofileid' operator='eq' value='" + fetchData.fieldsecurityprofileid + "'/>";
	fetchXml += "</filter>";
	fetchXml += "</link-entity>";
	fetchXml += "</entity>",
	fetchXml += "</fetch>";
	 

    var encodedFetchXML = encodeURI(fetchXml);
    var query = "/api/data/v9.1/systemusers?fetchXml=" + encodedFetchXML;
    var finalpathwithquery = d365BaseUrl + query;
  
    var req = new XMLHttpRequest();
//req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v9.1/systemusers?fetchXml=%3Cfetch%20mapping%3D%22logical%22%3E%3Centity%20name%3D%22systemuser%22%3E%3Cattribute%20name%3D%22systemuserid%22%2F%3E%3Cattribute%20name%3D%22firstname%22%2F%3E%3Clink-entity%20name%3D%22systemuserprofiles%22%20from%3D%22systemuserid%22%20to%3D%22systemuserid%22%3E%3Cfilter%3E%3Ccondition%20attribute%3D%22fieldsecurityprofileid%22%20operator%3D%22eq%22%20value%3D%22578C1F60-EBF9-EA11-A815-0022480076D0%22%2F%3E%3C%2Ffilter%3E%3C%2Flink-entity%3E%3C%2Fentity%3E%3C%2Ffetch%3E", false);
req.open("GET", finalpathwithquery, false);
req.setRequestHeader("OData-MaxVersion", "4.0");
req.setRequestHeader("OData-Version", "4.0");
req.setRequestHeader("Accept", "application/json");
req.setRequestHeader("Prefer", "odata.include-annotations=\"*\"");
req.onreadystatechange = function() {
    if (this.readyState === 4) {
        req.onreadystatechange = null;
        if (this.status === 200) {
            result = JSON.parse(this.response);
        } else {
            Xrm.Utility.alertDialog(this.statusText);
        }
    }
};
req.send();

        if(result != ""){
            for (var i = 0; i < result.value.length; i++) {
                userListCondition += "<condition attribute='systemuserid' operator='eq' value='" + result.value[i].systemuserid + "'/>";
            }
        }

    return userListCondition;
}

function getAssignedTeamUsersfromFSP(fetchData, d365BaseUrl)
{
	var teamUserListCondition = "";
    var result = "";

    var fetchXml =	"<fetch mapping='logical' distinct='true'>";
    fetchXml +=	"<entity name='systemuser'>";
      fetchXml +=	"<attribute name='systemuserid'/>";
      fetchXml +=	"<filter type='and'>";
        fetchXml +=	"<condition attribute='systemuserid' operator='not-null'/>";
      fetchXml +=	"</filter>";
      fetchXml +=	"<link-entity name='teammembership' from='systemuserid' to='systemuserid' visible='false' intersect='true'>";
        fetchXml +=	"<link-entity name='team' from='teamid' to='teamid' alias='af'>";
          fetchXml +=	"<link-entity name='teamprofiles' from='teamid' to='teamid' visible='false' intersect='true'>";
            fetchXml +=	"<link-entity name='fieldsecurityprofile' from='fieldsecurityprofileid' to='fieldsecurityprofileid' alias='ag'>";
              fetchXml +=	"<filter type='and'>";
                //FSP ID for KYC Processor 578C1F60-EBF9-EA11-A815-0022480076D0
                fetchXml += "<condition attribute='fieldsecurityprofileid' operator='eq' value='" + fetchData.fieldsecurityprofileid + "'/>";
              fetchXml +=	"</filter>";
            fetchXml +=	"</link-entity>";
          fetchXml +=	"</link-entity>";
        fetchXml +=	"</link-entity>";
      fetchXml +=	"</link-entity>";
    fetchXml +=	"</entity>";
  fetchXml +=	"</fetch>";	

    var encodedFetchXML = encodeURI(fetchXml);
     var query = "/api/data/v9.1/systemusers?fetchXml=" + encodedFetchXML;
    var finalpathwithquery = d365BaseUrl + query;

    var req = new XMLHttpRequest();
    //req.open("GET", Xrm.Page.context.getClientUrl() + "/api/data/v9.1/systemusers?fetchXml=%3Cfetch%20mapping%3D%22logical%22%3E%3Centity%20name%3D%22systemuser%22%3E%3Cattribute%20name%3D%22systemuserid%22%2F%3E%3Clink-entity%20name%3D%22systemuserprofiles%22%20from%3D%22systemuserid%22%20to%3D%22systemuserid%22%20visible%3D%22false%22%20intersect%3D%22true%22%3E%3Clink-entity%20name%3D%22fieldsecurityprofile%22%20from%3D%22fieldsecurityprofileid%22%20to%3D%22fieldsecurityprofileid%22%20alias%3D%22aa%22%3E%3Cfilter%20type%3D%22and%22%3E%3Ccondition%20attribute%3D%22fieldsecurityprofileid%22%20operator%3D%22eq%22%20value%3D%22578C1F60-EBF9-EA11-A815-0022480076D0%22%2F%3E%3C%2Ffilter%3E%3Clink-entity%20name%3D%22teamprofiles%22%20from%3D%22fieldsecurityprofileid%22%20to%3D%22fieldsecurityprofileid%22%20visible%3D%22false%22%20intersect%3D%22true%22%3E%3Clink-entity%20name%3D%22team%22%20from%3D%22teamid%22%20to%3D%22teamid%22%20alias%3D%22ab%22%3E%3Clink-entity%20name%3D%22teammembership%22%20from%3D%22teamid%22%20to%3D%22teamid%22%20visible%3D%22false%22%20intersect%3D%22true%22%3E%3Clink-entity%20name%3D%22systemuser%22%20from%3D%22systemuserid%22%20to%3D%22systemuserid%22%20alias%3D%22ac%22%2F%3E%3C%2Flink-entity%3E%3C%2Flink-entity%3E%3C%2Flink-entity%3E%3C%2Flink-entity%3E%3C%2Flink-entity%3E%3C%2Fentity%3E%3C%2Ffetch%3E", false);
    req.open("GET", finalpathwithquery, false);
    req.setRequestHeader("OData-MaxVersion", "4.0");
    req.setRequestHeader("OData-Version", "4.0");
    req.setRequestHeader("Accept", "application/json");
    req.setRequestHeader("Prefer", "odata.include-annotations=\"*\"");
    req.onreadystatechange = function() {
        if (this.readyState === 4) {
            req.onreadystatechange = null;
            if (this.status === 200) {
                result = JSON.parse(this.response);
            } else {
                Xrm.Utility.alertDialog(this.statusText);
            }
        }
    };
    req.send();

    if(result != ""){
        for (var i = 0; i < result.value.length; i++) {
            teamUserListCondition += "<condition attribute='systemuserid' operator='eq' value='" + result.value[i].systemuserid + "'/>";
        }
    }

    return teamUserListCondition;
}

function onSave_setProductAreaForAccountKYC(executionContext) 
{
    var formContext = executionContext.getFormContext();

    if(formContext.getAttribute("ukn_productarea").getValue() == null)
    {
        //var deliveryPatner = formContext.getAttribute("ukn_deliverypartner").getValue();
        var investmentprogramme = formContext.getAttribute("ukn_programme").getValue();

        if(investmentprogramme == null)
        {
            // get the userId
            var userId = Xrm.Utility.getGlobalContext().userSettings.userId;
            // remove { and } from the userId
            userId = userId.replace("{", "").replace("}", "");
            // Xrm.WebApi call to retrieve details of the user (fullname)
            // and the name of the businessunit (name from expand)
            Xrm.WebApi.online.retrieveRecord("systemuser", userId, "?$select=fullname&$expand=businessunitid($select=name)").then(
            function success(result) 
            {
                console.log(result);
                
                // Many To One Relationships
                if (result.hasOwnProperty("businessunitid")) 
                {
                    var businessunitid_name = result["businessunitid"]["name"]; // Text
                
                    //product area set
                    switch (businessunitid_name)
                    {
                        case "BBI":
                            formContext.getAttribute("ukn_productarea").setValue(968200000);
                        break;

                        case "BPC":
                                formContext.getAttribute("ukn_productarea").setValue(968200001);
                            break;
                        
                        case "Guarantees and Wholesale Solutions":
                            formContext.getAttribute("ukn_productarea").setValue(968200002);
                        break; 
                    
                        case "Venture Solutions":
                        case "ECF":
                        case "NSSIF":
                        case "Regional Funds":
                        case "Legacy Schemes":    
                            formContext.getAttribute("ukn_productarea").setValue(968200003);
                        break;  

                        case "SULCO":
                            formContext.getAttribute("ukn_productarea").setValue(968200004);
                        break;

                        default:
                            alert('No product area selected for KYC, please contact Dynamics CRM Administrator');
                        break;
                    }
                }        
            },
            function(error) {
                console.log(error.message);
            }
            );
        }
    }
}